// 
package com.hhz.ump.entity.planold;
// Generated 2010-8-9 15:22:34 by Hibernate Tools 3.2.4.GA


import java.sql.Clob;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

import org.hibernate.annotations.BatchSize;
import org.hibernate.annotations.GenericGenerator;

/**
 * PlanExecutionPlanMain generated by hbm2java
 */
@Entity
@Table(name="PLAN_EXECUTION_PLAN_MAIN_OLD"
    
)
public class PlanExecutionPlanMainOld  implements java.io.Serializable {


	private static final long serialVersionUID = -5885902179648796601L;
	private String planExecutionPlanMainId;
     private String reminder;
     private String reminder2;
     private String projectCd;
     private String projectName;
     private Clob decisionCondition;
     private String remark;
     private String creator;
     private String createdDeptCd;
     private Date createdDate;
     private String updator;
     private String updatedDeptCd;
     private Date updatedDate;
     private long recordVersion;
     private List<PlanProjectNodeRelOld> planProjectNodeRels = new ArrayList<PlanProjectNodeRelOld>();

    public PlanExecutionPlanMainOld() {
    }

	
    public PlanExecutionPlanMainOld(String planExecutionPlanMainId, long recordVersion) {
        this.planExecutionPlanMainId = planExecutionPlanMainId;
        this.recordVersion = recordVersion;
    }
    public PlanExecutionPlanMainOld(String planExecutionPlanMainId, String reminder, String reminder2, String projectCd, String projectName, Clob decisionCondition, String remark, String creator, String createdDeptCd, Date createdDate, String updator, String updatedDeptCd, Date updatedDate, long recordVersion, List<PlanProjectNodeRelOld> planProjectNodeRels) {
       this.planExecutionPlanMainId = planExecutionPlanMainId;
       this.reminder = reminder;
       this.reminder2 = reminder2;
       this.projectCd = projectCd;
       this.projectName = projectName;
       this.decisionCondition = decisionCondition;
       this.remark = remark;
       this.creator = creator;
       this.createdDeptCd = createdDeptCd;
       this.createdDate = createdDate;
       this.updator = updator;
       this.updatedDeptCd = updatedDeptCd;
       this.updatedDate = updatedDate;
       this.recordVersion = recordVersion;
       this.planProjectNodeRels = planProjectNodeRels;
    }
   
     @Id
    @GeneratedValue(generator = "system-uuid")
    @GenericGenerator(name = "system-uuid", strategy = "uuid.hex") 

    
    @Column(name="PLAN_EXECUTION_PLAN_MAIN_ID", unique=true, nullable=false, length=50)
    public String getPlanExecutionPlanMainId() {
        return this.planExecutionPlanMainId;
    }
    
    public void setPlanExecutionPlanMainId(String planExecutionPlanMainId) {
        this.planExecutionPlanMainId = planExecutionPlanMainId;
    }

    
    @Column(name="REMINDER", length=500)
    public String getReminder() {
        return this.reminder;
    }
    
    public void setReminder(String reminder) {
        this.reminder = reminder;
    }

    @Column(name="REMINDER2", length=500)
    public String getReminder2() {
        return this.reminder2;
    }
    
    public void setReminder2(String reminder2) {
        this.reminder2 = reminder2;
    }

    
    @Column(name="PROJECT_CD", length=30)
    public String getProjectCd() {
        return this.projectCd;
    }
    
    public void setProjectCd(String projectCd) {
        this.projectCd = projectCd;
    }

    
    @Column(name="PROJECT_NAME", length=200)
    public String getProjectName() {
        return this.projectName;
    }
    
    public void setProjectName(String projectName) {
        this.projectName = projectName;
    }

    
    @Column(name="DECISION_CONDITION")
    public Clob getDecisionCondition() {
        return this.decisionCondition;
    }
    
    public void setDecisionCondition(Clob decisionCondition) {
        this.decisionCondition = decisionCondition;
    }

    
    @Column(name="REMARK", length=200)
    public String getRemark() {
        return this.remark;
    }
    
    public void setRemark(String remark) {
        this.remark = remark;
    }

    
    @Column(name="CREATOR", length=20)
    public String getCreator() {
        return this.creator;
    }
    
    public void setCreator(String creator) {
        this.creator = creator;
    }

    
    @Column(name="CREATED_DEPT_CD", length=20)
    public String getCreatedDeptCd() {
        return this.createdDeptCd;
    }
    
    public void setCreatedDeptCd(String createdDeptCd) {
        this.createdDeptCd = createdDeptCd;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATED_DATE", length=7)
    public Date getCreatedDate() {
        return this.createdDate;
    }
    
    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }

    
    @Column(name="UPDATOR", length=20)
    public String getUpdator() {
        return this.updator;
    }
    
    public void setUpdator(String updator) {
        this.updator = updator;
    }

    
    @Column(name="UPDATED_DEPT_CD", length=20)
    public String getUpdatedDeptCd() {
        return this.updatedDeptCd;
    }
    
    public void setUpdatedDeptCd(String updatedDeptCd) {
        this.updatedDeptCd = updatedDeptCd;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="UPDATED_DATE", length=7)
    public Date getUpdatedDate() {
        return this.updatedDate;
    }
    
    public void setUpdatedDate(Date updatedDate) {
        this.updatedDate = updatedDate;
    }

    
    @Column(name="RECORD_VERSION", nullable=false, precision=10, scale=0)
    @Version 
    public long getRecordVersion() {
        return this.recordVersion;
    }
    
    public void setRecordVersion(long recordVersion) {
        this.recordVersion = recordVersion;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="planExecutionPlanMain")
    @BatchSize(size=10)
public List<PlanProjectNodeRelOld> getPlanProjectNodeRels() {
        return this.planProjectNodeRels;
    }
    
    public void setPlanProjectNodeRels(List<PlanProjectNodeRelOld> planProjectNodeRels) {
        this.planProjectNodeRels = planProjectNodeRels;
    }




}


