<?xml version="1.0" encoding="UTF-8"?>

<project default="create-war" basedir="." xmlns:artifact="urn:maven-artifact-ant">
	<!-- //定义不同的日期格式   -->

	<tstamp>
		<format property="TODAY_UK" pattern="d-MMMM-yyyy" locale="en" />
	</tstamp>
	<tstamp>
		<format property="TODAY_CN" pattern="yyyy-MM-dd" locale="zh" />
	</tstamp>
	<tstamp>
		<format property="touch.time" pattern="MM/dd/yyyy hh:mm aa" offset="-5" unit="hour" />
	</tstamp>
	<!-- //输出的日期格式定义  -->
	<target name="timestampTarget">
		<echo message="${DSTAMP}" />
		<echo message="${TODAY_UK}" />
		<echo message="${TODAY_CN}" />
		<echo message="${touch.time}" />
	</target>
	<property file="build.properties" />
	<path id="myclasspath">
		<pathelement location="${path.classes}" />
	</path>


	<tstamp>
		<format property="build.time" pattern="yyyyMMddHHmmss" />
	</tstamp>

	<target name="copy2Server">
		<exec executable="cmd.exe">
			<arg line="/c  copyToServer.bat" />
		</exec>
	</target>
	<target name="create-war" description="Packages the WAR file">
		<echo message="Creating the WAR...." />
		<!--		<delete file="${path.war}/${war.file}" />-->
		<delete dir="${path.source}">

		</delete>

		<copy todir="${path.source}">
			<fileset dir="${path.webapp}">
				<exclude name="**/html/**" />
				<exclude name="**/html2/**" />
				<exclude name="**/rar1/**" />
				<exclude name="**/*.svn" />
			</fileset>
		</copy>
		<copy todir="${path.source}/WEB-INF/classes">
			<fileset dir="${path.classes}">
				<exclude name="**/*.svn" />
			</fileset>
		</copy>
		<replace file="${path.source}/WEB-INF/classes/application.properties" token="${jdbc.password_old}" value="${jdbc.password_new}" summary="true" encoding="UTF-8">
		</replace>
		<replace file="${path.source}/WEB-INF/classes/application.properties" token="true" value="false" summary="true" encoding="UTF-8">
		</replace>
		<replace file="${path.source}/WEB-INF/classes/wsclient-beans.xml" token="${jdbc.port_old}" value="${jdbc.port_new}" summary="true" encoding="UTF-8">
		</replace>
		<replace file="${path.source}/WEB-INF/classes/application.properties" token="${jdbc.url_old}" value="${jdbc.url_new}" summary="true" encoding="UTF-8">
		</replace>
		<replace file="${path.source}/WEB-INF/classes/log4j.properties" token="${log4j.old}" value="${log4j.new}" summary="true" encoding="UTF-8">
		</replace>
		<antcall target="copyLib" />
		<antcall target="war" />
		<antcall target="copy2Server" />
	</target>
	<target name="init_maven">
		<path id="maven-ant-tasks.classpath" path="${M2_REPO}/org/apache/maven/maven-ant-tasks/2.1.1/maven-ant-tasks-2.1.1.jar" />
		<typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant" classpathref="maven-ant-tasks.classpath" />
		<artifact:pom id="maven.project" file="..\pom.xml" />
		<artifact:dependencies pathId="classpath.build" filesetid="maven.fileset.build">
			<pom refid="maven.project" />
		</artifact:dependencies>
		<artifact:dependencies pathId="classpath.runtime" filesetid="maven.fileset.runtime" useScope="runtime">
			<pom refid="maven.project" />
		</artifact:dependencies>
	</target>
	<target name="copyLib" depends="init_maven">
		<copy todir="${path.source}/WEB-INF/lib">
			<fileset refid="maven.fileset.runtime" />
			<mapper type="flatten" />
		</copy>
	</target>
	<target name="compile" description="description" depends="init_maven">
		<javac srcdir="${maven.project.build.sourceDirectory}" destdir="${maven.project.build.outputDirectory}" classpathref="classpath.build" />
	</target>
	<target name="copyResource" depends="init_maven">
		<copy todir="${maven.project.build.outputDirectory}">
			<fileset dir="src/main/resources">
			</fileset>
		</copy>
	</target>
	<target name="war">
		<delete file="${path.war}/${war.file}" />
		<war destfile="${path.war}/${war.file}" webxml="${path.source}/WEB-INF/web.xml" filesonly="true">
			<fileset dir="${path.source}" />
		</war>
		<copy file="${path.war}/${war.file}" tofile="${path.war}/${TODAY_CN}${war.file}">
		</copy>
	</target>

	<target name="jar" depends="compile, copyResource">
		<delete file="${maven.project.build.directory}/${maven.project.build.finalName}.jar" failonerror="false" />
		<jar destfile="${maven.project.build.directory}/${maven.project.build.finalName}.jar" basedir="${maven.project.build.outputDirectory}">
		</jar>
	</target>
</project>
